# lower priority on top, higher priority expression on bottom

expr            : keywords:var identifier eq expr
                : comp-expr ((keyword: and|keyword: or) comp-expr)*

comp-expr       : not comp-expr
                : arith-expr ((ee|lt|gt|lte|gte) arith-expr)*

arith-expr      : term ((plus|minus) term)*

term            : factor ((mul|div) factor)*

factor          : (plus|minus) factor
                : power

power           : atom (pow factor)*

atom            : int|float|identifier
                : lparen expr rparen

if-expr         : keyword:if expr keyword:then expr
                 (keyword:elif expr keyword:then expr)*
                 (keyword:else expr)?